name: deployment_pipeline
on:
  push:
      branches:
          - main
  pull_request:
      branches: [main]
      types: [opened, synchronize]

jobs:
    deployment_pipeline:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - uses: actions/setup-python@v5
              with:
                python-version: '3.12'
                cache: 'pip'
            - uses: actions/setup-node@v4
              with:
                node-version: '20'
            - name: Install npm and build frontend #the collectstatic command will pick up the files later
              run: cd js_css && npm install && npm run build
            - name: Run linter
              run: cd js_css && npm run lint
            - name: Unittest for react
              run: cd js_css && npm run test
            - name: Install python requirements
              run: pip install -r requirements.txt
            - name: Run flake8
              run: flake8 core capsite users
            - name: Run django unittest
              run: python manage.py test
            - name: Launch django server
              env:
                SECRET_KEY: ${{ secrets.DJANGO_SECRET }}
              run: |
                  python manage.py collectstatic --no-input &&
                  DJANGO_SETTINGS_MODULE=core.settings.test gunicorn core.wsgi &
            - name: Run e2e tests with cypress
              uses: cypress-io/github-action@v5
              with:
                working-directory: ./tests
                wait-on: http://localhost:8000
            - name: Kill gunicorn from previous step
              run: killall gunicorn
            - name: Install Railway
              run: npm i -g @railway/cli
            - name: Deploy
              run: railway up --service=captogether
              env:
                RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}

    tag_release:
      needs: [deployment_pipeline]
      if: ${{ github.event_name == 'push' }}
      runs-on: ubuntu-latest
      steps:
        - name: Checkout
          uses: actions/checkout@v4
        - name: Set skip
          id: set-skip
          run: echo "SKIP=${{ contains(join(github.event.commits.*.message), '#skip') }}" >> "$GITHUB_OUTPUT"
        - name: Bump version and push tag
          env:
            SKIP: ${{ steps.set-skip.outputs.SKIP }}
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            DEFAULT_BUMP: patch
          if: ${{ !fromJson(env.SKIP) }}
          uses: anothrNick/github-tag-action@1.67.0
      
    notify_discord:
      needs: [tag_release]
      runs-on: ubuntu-latest
      steps:
        - name: Deployment success
          uses: rjstone/discord-webhook-notify@v1
          if: success()
          with:
              severity: info
              details: ${{ github.event.pull_request.user.login }} just deployed a new version of ${{ github.repo.name }} !
              webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}
        - name: Deployment failure
          uses: rjstone/discord-webhook-notify@v1
          if: failure()
          with:
              severity: error
              details: Deployment by ${{ github.event.pull_request.user.login }} just failed !
              webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}